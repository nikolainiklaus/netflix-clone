{"ast":null,"code":"var _jsxFileName = \"/Users/nikolainiklaus/Desktop/netflix-react/src/Components/CarouselRow.jsx\";\nimport { Component } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport ErrorNetflix from \"./ErrorNetflix\";\nimport LoadingNetflix from \"./LoadingNetflix\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass CarouselRow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      isLoading: true,\n      isError: false,\n      errorMessage: \"\"\n    };\n    this.fetchMovies = async () => {\n      try {\n        let response = await fetch(this.props.link);\n        if (response.ok) {\n          let data = await response.json();\n          console.log(data);\n          this.setState({\n            movies: data.Search,\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n          throw response.status + \" \" + response.statusText;\n        }\n      } catch (error) {\n        this.setState({\n          isLoading: false,\n          isError: true,\n          errorMessage: error\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchMovies(); //\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-light ml-5\",\n        children: [this.props.titleOf, \"  Collection\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        className: \"my-3\",\n        children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(LoadingNetflix, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this), this.state.isError && /*#__PURE__*/_jsxDEV(ErrorNetflix, {\n          errorMessage: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this), this.state.movies.map(singleMovie => {\n          return /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            className: \"col-md-2\",\n            interval: 1000,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"movie-cover\",\n              src: singleMovie.Poster,\n              alt: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)\n          }, singleMovie.imdbID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default CarouselRow;","map":{"version":3,"names":["Component","Carousel","ErrorNetflix","LoadingNetflix","CarouselRow","state","movies","isLoading","isError","errorMessage","fetchMovies","response","fetch","props","link","ok","data","json","console","log","setState","Search","status","statusText","error","componentDidMount","render","titleOf","map","singleMovie","Poster","imdbID"],"sources":["/Users/nikolainiklaus/Desktop/netflix-react/src/Components/CarouselRow.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport ErrorNetflix from \"./ErrorNetflix\";\nimport LoadingNetflix from \"./LoadingNetflix\";\n\nclass CarouselRow extends Component {\n\nstate = {\n        movies: [],\n        isLoading: true,\n        isError: false,\n        errorMessage: \"\",\n      }\n\nfetchMovies = async () => {\n    try {\n        let response = await fetch(this.props.link)\n\n        if (response.ok) {\n\n          let data = await response.json() \n          console.log(data) \n\n          this.setState({\n            movies: data.Search,\n            isLoading: false,\n          })\n        }\n        else  { \n          this.setState({\n              isLoading: false,\n\n            })\n            throw response.status + \" \" + response.statusText;\n        }\n      } catch (error) {\n        this.setState({\n          isLoading: false,\n          isError: true,\n          errorMessage: error,\n        })\n\n      }\n  \n    }\n    \n    \n\n    \ncomponentDidMount() {\n\n      this.fetchMovies() //\n}\n\n\n\n    render() {\n        return (\n\n          <>\n                <h2 className=\"text-light ml-5\">{this.props.titleOf}  Collection</h2>\n              \n          \n            <Carousel className=\"my-3\">\n\n         \n            {this.state.isLoading &&\n          (<LoadingNetflix></LoadingNetflix>)\n          }\n           \n           {this.state.isError && \n          (<ErrorNetflix errorMessage={this.state.errorMessage}></ErrorNetflix>)\n          }\n\n               {this.state.movies.map((singleMovie) => {\n                return (\n                  \n\n                    <Carousel.Item  className=\"col-md-2\" interval={1000} key={singleMovie.imdbID}>\n      \n                                    <img className=\"movie-cover\" src={singleMovie.Poster} alt=\"poster\"/>\n                    </Carousel.Item>\n   \n                   \n\n                )\n            })\n\n        }\n\n        </Carousel>\n                 \n</>\n        )\n\n\n}\n}\n\nexport default CarouselRow;\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAAA;AAE9C,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAEpCK,KAAK,GAAG;MACAC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE;IAChB,CAAC;IAAA,KAEPC,WAAW,GAAG,YAAY;MACtB,IAAI;QACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;QAE3C,IAAIH,QAAQ,CAACI,EAAE,EAAE;UAEf,IAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;UAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;UAEjB,IAAI,CAACI,QAAQ,CAAC;YACZd,MAAM,EAAEU,IAAI,CAACK,MAAM;YACnBd,SAAS,EAAE;UACb,CAAC,CAAC;QACJ,CAAC,MACK;UACJ,IAAI,CAACa,QAAQ,CAAC;YACVb,SAAS,EAAE;UAEb,CAAC,CAAC;UACF,MAAMI,QAAQ,CAACW,MAAM,GAAG,GAAG,GAAGX,QAAQ,CAACY,UAAU;QACrD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,IAAI,CAACJ,QAAQ,CAAC;UACZb,SAAS,EAAE,KAAK;UAChBC,OAAO,EAAE,IAAI;UACbC,YAAY,EAAEe;QAChB,CAAC,CAAC;MAEJ;IAEF,CAAC;EAAA;EAKLC,iBAAiB,GAAG;IAEd,IAAI,CAACf,WAAW,EAAE,EAAC;EACzB;;EAIIgB,MAAM,GAAG;IACL,oBAEE;MAAA,wBACM;QAAI,SAAS,EAAC,iBAAiB;QAAA,WAAE,IAAI,CAACb,KAAK,CAACc,OAAO,EAAC,cAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAGzE,QAAC,QAAQ;QAAC,SAAS,EAAC,MAAM;QAAA,WAGzB,IAAI,CAACtB,KAAK,CAACE,SAAS,iBACtB,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA,QAAmB,EAGjC,IAAI,CAACF,KAAK,CAACG,OAAO,iBACnB,QAAC,YAAY;UAAC,YAAY,EAAE,IAAI,CAACH,KAAK,CAACI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAiB,EAGhE,IAAI,CAACJ,KAAK,CAACC,MAAM,CAACsB,GAAG,CAAEC,WAAW,IAAK;UACvC,oBAGI,QAAC,QAAQ,CAAC,IAAI;YAAE,SAAS,EAAC,UAAU;YAAC,QAAQ,EAAE,IAAK;YAAA,uBAEpC;cAAK,SAAS,EAAC,aAAa;cAAC,GAAG,EAAEA,WAAW,CAACC,MAAO;cAAC,GAAG,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA;UAAE,GAF1BD,WAAW,CAACE,MAAM;YAAA;YAAA;YAAA;UAAA,QAG5D;QAKxB,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAIK;IAAA,gBAEhB;EAIH;AACA;AAEA,eAAe3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}